.mutualWrapper {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  max-width: 1500px;
  flex-direction: column;
  position: relative;
  height: auto;
  background-color: var(--dark-blue-glass);
  padding: 20px;
  border-radius: 15px;
  border: 1px solid var(--border);
}
.mutualWrapper h2 {
    margin-bottom: 20px;
}

.mutualWrapper h2 svg {
    animation: Spinner 3s linear infinite;
    vertical-align: middle;
}

@keyframes Spinner {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.gamesContainer {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  justify-content: center;
  height: 500px;
  overflow: auto;
  padding: 10px;
  background-color: var(--steam-blue);
  border-radius: 7px;
  border: 1px solid var(--border);
}

.gamesContainer > span {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    justify-content: center
}
.gamesContainer::-webkit-scrollbar {
  width: 10px;
}
.gamesContainer::-webkit-scrollbar-track {
  background: var(--dark-blue-glass);
  border-left: 1px solid var(--border);
  border-radius: 0 6px 6px 0;
}
.gamesContainer::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 0 6px 6px 0;
  cursor: pointer;
}
.gamesContainer::-webkit-scrollbar-thumb:hover {
  background: #555;
}
.gameCard {
  position: relative;
  width: 150px;
  height: 225px;
  perspective: 1000px;
  align-items: center;
  justify-content: center;
}
.gameCard p {
  position: relative;
  z-index: 1;
  width: 90%;
  text-align: center;
  pointer-events: none;
  margin: 30px auto;
  display: none;
}
.gameCard.multi > span::after {
  display: block;
  content: "Multiplayer";
  width: auto;
  height: auto;
  background-color: var(--blue);
  color: var(--text);
  text-shadow: 0px 0px 4px black;
  position: absolute;
  z-index: 10;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  padding: 2px 4px;
  font-size: 10px;
  border-radius: 7px 7px 0 0;
  text-transform: uppercase;
  font-weight: 600;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: subpixel-antialiased;
}
.gameCard:hover p {
  transform: rotateX(10deg) scale(1.05);
  transition: ease-in-out 0.2s;
}
.gameCard img {
  position: relative;
  z-index: 3;
}
.gameCard > span {
  background-size: 275%;
  background-position: center;
  border-radius: 15px;
  background: radial-gradient(
    circle at top,
    rgba(104, 117, 127, 1) 0%,
    rgba(18, 33, 50, 1) 72%
  ) !important;
  position: relative;
}
.gameCard > span::before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  width: 500%;
  height: 100%;
  background: linear-gradient(
    to right,
    rgba(255, 255, 255, 0) 55%,
    rgba(255, 255, 255, 0.1) 60%,
    rgba(255, 255, 255, 0.1) 75%,
    rgba(0, 0, 0, 0) 100%
  );
  transform: skewX(55deg) translateX(50%);
  transition: ease-in-out 0.2s;
  pointer-events: none;
  z-index: 4;
}

.gameCard > span:hover::before,
.gameCard > span:focus-within::before {
  background: linear-gradient(
    to right,
    rgba(255, 255, 255, 0) 55%,
    rgba(255, 255, 255, 0.2) 60%,
    rgba(255, 255, 255, 0.2) 75%,
    rgba(0, 0, 0, 0) 100%
  );
  transform: skewX(55deg) translateX(35%);
  transition: ease-in-out 0.2s;
}
.gameCard > span:hover,
.gameCard > span:focus-within {
  transition-timing-function: ease-out;
  transition: 0.25s;
  transform: rotateX(10deg) scale(1.05) translateY(0px);
  box-shadow: 0px 7px 15px 0px rgba(0, 0, 0, 0.5);
}
.gameLoading {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 10px;
  justify-content: center;
  margin-left: 10px;
}

.noGames {
  display: flex;
  flex-direction: column;
  height: 100%;
  justify-content: center;
  align-items: center;
  font-size: 12px;
}
.noGames svg {
  font-size: 40px;
  margin-bottom: 10px;
}
.gameCard :global(.imgError) img {
  display: none !important;
}
.gameCard :global(.imgError) + p {
  display: block !important;
}
@media screen and (max-width: 433px) {
    .gameCard {
      width: 100px;
      height: 140px;
    }
    .gameCard p {
      font-size: 12px;
    }
    .gamesContainer > span span {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        width: 100px!important;
        height: 140px!important;
    }
  }